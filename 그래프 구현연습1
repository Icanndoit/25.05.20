#include<iostream>
#include<queue>
using namespace std;

int graph[8][8] = { 0 };
int DFSvisit[8] = { 0 };
int BFSvisit[8] = { 0 };

void DFS(int v = 0) {
	DFSvisit[v] = 1;

	cout << v << ' ';
	for (int i = 1; i < 8; i++) {
		if (graph[v][i] == 0 || DFSvisit[i] == 1)
			continue;
		DFS(i);
	}
}

void BFS() {
	int v = 0;  // 탐색 시작 노드
	queue<int>q;

	q.push(v);
	BFSvisit[v] = 1;
	while (!q.empty())
	{
		v = q.front();
		cout << q.front() << ' ';
		q.pop();
		for (int i = 1; i < 8; i++) {
			if (graph[v][i] == 1 && BFSvisit[i] == 0)
			{
				q.push(i);
				BFSvisit[i] = 1;
			}
		}
	}
}

int main() {
	graph[0][1] = graph[1][0] = 1;
	graph[0][2] = graph[2][0] = 1;
	graph[0][3] = graph[3][0] = 1;
	graph[1][4] = graph[4][1] = 1;
	graph[1][5] = graph[5][1] = 1;
	graph[2][6] = graph[6][2] = 1;
	graph[3][7] = graph[7][3] = 1;

	cout << "    0   " << "\n";
	cout << "  / ｜ ＼	" << "\n";
	cout << " 1  2   3" << "\n";
	cout << "/ ＼ ｜ ｜" << "\n";
	cout << "4  5  6  7" << "\n\n";
	
	cout << "DFS : ";	DFS();  // 0 1 4 5 2 6 3 7
	cout << "\n";
	cout << "BFS : ";	BFS();  // 0 1 2 3 4 5 6 7

	return 0;
}
