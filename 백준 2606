#include<iostream>
#include<queue>
using namespace std;

int graph[101][101] = { 0 };
int DFSvisit[101] = { 0 };
int re = -1;

void DFS(int n, int v = 1) {  // 정점의 개수, 시작 노드
	DFSvisit[v] = 1;
	re += 1;
	
	for (int i = 1; i <= n; i++) {
		if (graph[v][i] == 0 || DFSvisit[i] == 1)
			continue;
		DFS(n, i);
	}
}

int main() {
	int n, m;  // 컴퓨터의 개수, 간선의 개수

	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int a, b;
		cin >> a >> b;
		if (a != b)
			graph[a][b] = graph[b][a] = 1;
	}
	DFS(n);
	cout << re << "\n";

	return 0;
}
